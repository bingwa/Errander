{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Errand\\\\frontend\\\\src\\\\pages\\\\ErranderDashboard.js\",\n  _s = $RefreshSig$();\n// frontend/src/pages/ErranderDashboard.js\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport { Card, Button, Spinner, Alert } from 'react-bootstrap';\nimport io from 'socket.io-client';\nimport taskService from '../services/taskService';\nimport AuthContext from '../context/AuthContext';\nimport './ErranderDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCKET_URL = 'http://localhost:5000';\nconst ErranderDashboard = () => {\n  _s();\n  const {\n    token\n  } = useContext(AuthContext);\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const socketRef = useRef(null);\n  const locationIntervalRef = useRef(null);\n  useEffect(() => {\n    // Connect to WebSocket server\n    socketRef.current = io(SOCKET_URL);\n    const fetchTasks = async () => {\n      try {\n        const res = await taskService.getAssignedTasks(token);\n        setTasks(res.data);\n      } catch (err) {\n        setError('Failed to fetch assigned tasks.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTasks();\n\n    // Disconnect on component unmount\n    return () => {\n      socketRef.current.disconnect();\n      if (locationIntervalRef.current) {\n        clearInterval(locationIntervalRef.current);\n      }\n    };\n  }, [token]);\n  const handleUpdateStatus = async (taskId, status) => {\n    try {\n      await taskService.updateTaskStatus(taskId, status, token);\n      setTasks(tasks.map(t => t._id === taskId ? {\n        ...t,\n        status\n      } : t));\n      if (status === 'in_progress') {\n        startLocationSharing(taskId);\n      }\n      if (status === 'completed') {\n        stopLocationSharing();\n      }\n    } catch (err) {\n      setError('Failed to update task status.');\n    }\n  };\n  const startLocationSharing = taskId => {\n    if (locationIntervalRef.current) clearInterval(locationIntervalRef.current);\n    locationIntervalRef.current = setInterval(() => {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        const locationData = {\n          taskId,\n          location: {\n            latitude,\n            longitude\n          }\n        };\n        // Send location update via WebSocket\n        socketRef.current.emit('updateLocation', locationData);\n      }, err => console.error(\"Error getting location:\", err), {\n        enableHighAccuracy: true\n      });\n    }, 5000); // Send update every 5 seconds\n  };\n  const stopLocationSharing = () => {\n    if (locationIntervalRef.current) {\n      clearInterval(locationIntervalRef.current);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 59\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-4\",\n      children: \"Your Assigned Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 23\n    }, this), tasks.length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"info\",\n      children: \"You have no assigned tasks.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this) : tasks.map(task => /*#__PURE__*/_jsxDEV(Card, {\n      className: \"task-card\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        className: \"task-card-header\",\n        children: [\"Task ID: \", task._id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 40\n          }, this), \" \", task.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 40\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `task-status status-${task.status.replace('_', '')}`,\n            children: task.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 65\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }, this), task.status === 'accepted' && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => handleUpdateStatus(task._id, 'in_progress'),\n          children: \"Start Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 33\n        }, this), task.status === 'in_progress' && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          onClick: () => handleUpdateStatus(task._id, 'completed'),\n          children: \"Mark as Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }, this)]\n    }, task._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n_s(ErranderDashboard, \"JxwOcTaeprL5KJnbLFlvJdsCACg=\");\n_c = ErranderDashboard;\nexport default ErranderDashboard;\nvar _c;\n$RefreshReg$(_c, \"ErranderDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","Card","Button","Spinner","Alert","io","taskService","AuthContext","jsxDEV","_jsxDEV","SOCKET_URL","ErranderDashboard","_s","token","tasks","setTasks","loading","setLoading","error","setError","socketRef","locationIntervalRef","current","fetchTasks","res","getAssignedTasks","data","err","disconnect","clearInterval","handleUpdateStatus","taskId","status","updateTaskStatus","map","t","_id","startLocationSharing","stopLocationSharing","setInterval","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","locationData","location","emit","console","enableHighAccuracy","className","children","animation","fileName","_jsxFileName","lineNumber","columnNumber","variant","length","task","Header","Body","Text","description","replace","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Errand/frontend/src/pages/ErranderDashboard.js"],"sourcesContent":["// frontend/src/pages/ErranderDashboard.js\r\nimport React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport { Card, Button, Spinner, Alert } from 'react-bootstrap';\r\nimport io from 'socket.io-client';\r\nimport taskService from '../services/taskService';\r\nimport AuthContext from '../context/AuthContext';\r\nimport './ErranderDashboard.css';\r\n\r\nconst SOCKET_URL = 'http://localhost:5000';\r\n\r\nconst ErranderDashboard = () => {\r\n    const { token } = useContext(AuthContext);\r\n    const [tasks, setTasks] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const socketRef = useRef(null);\r\n    const locationIntervalRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        // Connect to WebSocket server\r\n        socketRef.current = io(SOCKET_URL);\r\n\r\n        const fetchTasks = async () => {\r\n            try {\r\n                const res = await taskService.getAssignedTasks(token);\r\n                setTasks(res.data);\r\n            } catch (err) {\r\n                setError('Failed to fetch assigned tasks.');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchTasks();\r\n\r\n        // Disconnect on component unmount\r\n        return () => {\r\n            socketRef.current.disconnect();\r\n            if(locationIntervalRef.current) {\r\n                clearInterval(locationIntervalRef.current);\r\n            }\r\n        };\r\n    }, [token]);\r\n\r\n    const handleUpdateStatus = async (taskId, status) => {\r\n        try {\r\n            await taskService.updateTaskStatus(taskId, status, token);\r\n            setTasks(tasks.map(t => t._id === taskId ? { ...t, status } : t));\r\n\r\n            if (status === 'in_progress') {\r\n                startLocationSharing(taskId);\r\n            }\r\n            if (status === 'completed') {\r\n                stopLocationSharing();\r\n            }\r\n        } catch (err) {\r\n            setError('Failed to update task status.');\r\n        }\r\n    };\r\n\r\n    const startLocationSharing = (taskId) => {\r\n        if(locationIntervalRef.current) clearInterval(locationIntervalRef.current);\r\n\r\n        locationIntervalRef.current = setInterval(() => {\r\n            navigator.geolocation.getCurrentPosition(\r\n                (position) => {\r\n                    const { latitude, longitude } = position.coords;\r\n                    const locationData = {\r\n                        taskId,\r\n                        location: { latitude, longitude }\r\n                    };\r\n                    // Send location update via WebSocket\r\n                    socketRef.current.emit('updateLocation', locationData);\r\n                },\r\n                (err) => console.error(\"Error getting location:\", err),\r\n                { enableHighAccuracy: true }\r\n            );\r\n        }, 5000); // Send update every 5 seconds\r\n    };\r\n    \r\n    const stopLocationSharing = () => {\r\n        if(locationIntervalRef.current) {\r\n            clearInterval(locationIntervalRef.current);\r\n        }\r\n    };\r\n\r\n    if (loading) return <div className=\"text-center mt-5\"><Spinner animation=\"border\" /></div>;\r\n\r\n    return (\r\n        <div className=\"container py-4\">\r\n            <h2 className=\"text-center mb-4\">Your Assigned Tasks</h2>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            {tasks.length === 0 ? (\r\n                <Alert variant=\"info\">You have no assigned tasks.</Alert>\r\n            ) : (\r\n                tasks.map(task => (\r\n                    <Card key={task._id} className=\"task-card\">\r\n                        <Card.Header className=\"task-card-header\">Task ID: {task._id}</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text><strong>Description:</strong> {task.description}</Card.Text>\r\n                            <Card.Text><strong>Status:</strong> <span className={`task-status status-${task.status.replace('_', '')}`}>{task.status}</span></Card.Text>\r\n                             {task.status === 'accepted' && (\r\n                                <Button variant=\"primary\" onClick={() => handleUpdateStatus(task._id, 'in_progress')}>Start Task</Button>\r\n                             )}\r\n                             {task.status === 'in_progress' && (\r\n                                <Button variant=\"success\" onClick={() => handleUpdateStatus(task._id, 'completed')}>Mark as Complete</Button>\r\n                             )}\r\n                        </Card.Body>\r\n                    </Card>\r\n                ))\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErranderDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}