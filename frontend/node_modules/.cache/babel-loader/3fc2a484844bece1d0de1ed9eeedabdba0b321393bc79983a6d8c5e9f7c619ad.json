{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Errand\\\\frontend\\\\src\\\\pages\\\\ErranderDashboard.js\",\n  _s = $RefreshSig$();\n// frontend/src/pages/ErranderDashboard.js\nimport React, { useState, useEffect, useContext, useCallback, useRef } from 'react';\nimport { Container, Row, Col, Card, Button, Spinner, Alert, Tabs, Tab, Table, Badge, Modal, Form, InputGroup } from 'react-bootstrap';\nimport taskService from '../services/taskService';\nimport erranderService from '../services/erranderService';\nimport withdrawalService from '../services/withdrawalService';\nimport AuthContext from '../context/AuthContext';\nimport ChatWindow from '../components/ChatWindow';\nimport io from 'socket.io-client';\nimport './ErranderDashboard.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SOCKET_URL = 'http://localhost:5000';\nconst StatCard = ({\n  icon,\n  title,\n  value,\n  colorClass,\n  onWithdraw\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"stat-card h-100\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: `icon ${colorClass}`,\n    children: icon\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 105\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    className: \"fw-bold\",\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 155\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-muted\",\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 191\n  }, this), onWithdraw && /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"success\",\n    size: \"sm\",\n    className: \"mt-2\",\n    onClick: onWithdraw,\n    children: \"Withdraw\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 243\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 72\n}, this);\n_c = StatCard;\nconst AvailableJobCard = ({\n  task,\n  onApply\n}) => /*#__PURE__*/_jsxDEV(Card, {\n  className: \"mb-3 shadow-sm\",\n  children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n    as: \"h5\",\n    children: task.service.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 84\n  }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n      children: task.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 149\n    }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Est. Payout:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 201\n      }, this), \" $\", task.estimatedPrice]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 190\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"success\",\n      onClick: () => onApply(task._id),\n      children: \"Apply\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 265\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 138\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 51\n}, this);\n_c2 = AvailableJobCard;\nconst MyTaskItem = ({\n  task,\n  onUpdateStatus,\n  onOpenChat\n}) => /*#__PURE__*/_jsxDEV(Card, {\n  className: \"mb-3 shadow-sm\",\n  children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n    className: \"d-flex justify-content-between align-items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Task for User: ...\", task.user._id.slice(-6)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 172\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"fw-bold text-primary text-capitalize\",\n      children: task.status.replace('_', ' ')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 228\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 97\n  }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 357\n      }, this), \" \", task.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 346\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex gap-2\",\n      children: [task.status === 'accepted' && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => onUpdateStatus(task._id, 'in_progress'),\n        children: \"Start Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 478\n      }, this), task.status === 'in_progress' && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        onClick: () => onUpdateStatus(task._id, 'completed'),\n        children: \"Mark as Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 614\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-secondary\",\n        onClick: () => onOpenChat(task),\n        children: \"Chat with User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 720\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 417\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 335\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 64\n}, this);\n_c3 = MyTaskItem;\nconst ErranderDashboard = () => {\n  _s();\n  const {\n    token\n  } = useContext(AuthContext);\n  const [summary, setSummary] = useState({\n    walletBalance: '0.00',\n    jobsCompleted: 0,\n    rating: '5.0'\n  });\n  const [pendingTasks, setPendingTasks] = useState([]);\n  const [myTasks, setMyTasks] = useState([]);\n  const [paymentHistory, setPaymentHistory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [showWithdrawModal, setShowWithdrawModal] = useState(false);\n  const [withdrawAmount, setWithdrawAmount] = useState('');\n  const [mpesaNumber, setMpesaNumber] = useState('');\n  const [showChat, setShowChat] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const socketRef = useRef(null);\n  const fetchPendingTasks = useCallback(async () => {\n    if (!token) return;\n    try {\n      const res = await taskService.getPendingTasks(token);\n      setPendingTasks(res.data);\n    } catch (err) {\n      console.error(\"Failed to fetch pending tasks\");\n    }\n  }, [token]);\n  const fetchAllData = useCallback(async () => {\n    if (!token) return;\n    setLoading(true);\n    try {\n      const [summaryRes, myTasksRes, historyRes] = await Promise.all([erranderService.getDashboardSummary(token), taskService.getAssignedTasks(token), taskService.getPaymentHistory(token)]);\n      setSummary(summaryRes.data);\n      setMyTasks(myTasksRes.data);\n      setPaymentHistory(historyRes.data);\n      await fetchPendingTasks(); // Also fetch pending tasks initially\n    } catch (err) {\n      setError('Failed to load dashboard data.');\n    } finally {\n      setLoading(false);\n    }\n  }, [token, fetchPendingTasks]);\n\n  // --- THIS IS THE KEY UPDATE ---\n  useEffect(() => {\n    fetchAllData(); // Fetch all data on initial load\n\n    socketRef.current = io(SOCKET_URL);\n    socketRef.current.emit('joinErranderRoom');\n\n    // Listen for new tasks being posted by ANY user\n    socketRef.current.on('newTaskAvailable', () => {\n      console.log(\"Real-time event: New task available! Refetching...\");\n      fetchPendingTasks();\n    });\n\n    // Listen for when ANOTHER errander takes a task\n    socketRef.current.on('taskTaken', ({\n      taskId\n    }) => {\n      console.log(`Real-time event: Task ${taskId} was taken. Removing from list.`);\n      setPendingTasks(prev => prev.filter(task => task._id !== taskId));\n    });\n\n    // Cleanup on component unmount\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, [fetchAllData, fetchPendingTasks]);\n  const handleApplyForTask = async taskId => {\n    try {\n      await taskService.assignTask(taskId, token);\n      alert('You got the job!');\n      fetchAllData(); // Refresh all data to move task and update lists\n    } catch (err) {\n      alert('Could not apply for task. It may have already been taken.');\n      setPendingTasks(prev => prev.filter(task => task._id !== taskId));\n    }\n  };\n  const handleUpdateStatus = async (taskId, status) => {\n    try {\n      await taskService.updateTaskStatus(taskId, status, token);\n      fetchAllData();\n    } catch (err) {\n      alert('Failed to update task status.');\n    }\n  };\n  const handleOpenChat = task => {\n    setSelectedTask(task);\n    setShowChat(true);\n  };\n  const handleWithdraw = async e => {/* ... same as before ... */};\n  if (loading) return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"text-center mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 65\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 25\n  }, this);\n  const activeTasks = myTasks.filter(t => t.status !== 'completed' && t.status !== 'paid' && t.status !== 'cancelled');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container p-lg-4 p-md-3 p-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-4 fw-bold\",\n        children: \"Errander Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-4 g-3\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(StatCard, {\n            icon: \"\\uD83D\\uDCB0\",\n            title: \"Wallet\",\n            value: `$${summary.walletBalance}`,\n            colorClass: \"wallet-icon\",\n            onWithdraw: () => setShowWithdrawModal(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(StatCard, {\n            icon: \"\\uD83D\\uDCE6\",\n            title: \"Jobs Completed\",\n            value: summary.jobsCompleted,\n            colorClass: \"jobs-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(StatCard, {\n            icon: \"\\u2B50\",\n            title: \"Your Rating\",\n            value: summary.rating,\n            colorClass: \"rating-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks-section\",\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          defaultActiveKey: \"available\",\n          id: \"errander-tabs\",\n          className: \"mb-3\",\n          justify: true,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            eventKey: \"available\",\n            title: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"Available Jobs \", /*#__PURE__*/_jsxDEV(Badge, {\n                bg: \"success\",\n                children: pendingTasks.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 75\n              }, this)]\n            }, void 0, true),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2\",\n              children: pendingTasks.length > 0 ? pendingTasks.map(task => /*#__PURE__*/_jsxDEV(AvailableJobCard, {\n                task: task,\n                onApply: handleApplyForTask\n              }, task._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 202\n              }, this)) : /*#__PURE__*/_jsxDEV(Alert, {\n                variant: \"light\",\n                className: \"text-center\",\n                children: \"No jobs available right now.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 282\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 129\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            eventKey: \"my-tasks\",\n            title: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"My Active Jobs \", /*#__PURE__*/_jsxDEV(Badge, {\n                bg: \"primary\",\n                children: activeTasks.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 74\n              }, this)]\n            }, void 0, true),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2\",\n              children: activeTasks.length > 0 ? activeTasks.map(task => /*#__PURE__*/_jsxDEV(MyTaskItem, {\n                task: task,\n                onUpdateStatus: handleUpdateStatus,\n                onOpenChat: handleOpenChat\n              }, task._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 198\n              }, this)) : /*#__PURE__*/_jsxDEV(Alert, {\n                variant: \"light\",\n                className: \"text-center\",\n                children: \"You have no active jobs.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 307\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 127\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            eventKey: \"payments\",\n            title: \"Payment History\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2\",\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                striped: true,\n                bordered: true,\n                hover: true,\n                responsive: true,\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 147\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Task\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 160\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Payout\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 173\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 143\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 136\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: paymentHistory.length > 0 ? paymentHistory.map(p => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: new Date(p.createdAt).toLocaleDateString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 278\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [p.description.substring(0, 50), \"...\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 331\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [\"$\", p.finalPrice || p.estimatedPrice]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 375\n                    }, this)]\n                  }, p._id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 262\n                  }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {\n                      colSpan: \"3\",\n                      className: \"text-center\",\n                      children: \"No payment history.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 433\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 429\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 201\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 95\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 74\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), selectedTask && /*#__PURE__*/_jsxDEV(ChatWindow, {\n      show: showChat,\n      handleClose: () => setShowChat(false),\n      taskId: selectedTask._id,\n      recipientName: `User (...${selectedTask.user._id.slice(-6)})`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showWithdrawModal,\n      onHide: () => setShowWithdrawModal(false),\n      centered: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ErranderDashboard, \"bAzNimlI5ptosKetidTrGiBrZ5k=\");\n_c4 = ErranderDashboard;\nexport default ErranderDashboard;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"StatCard\");\n$RefreshReg$(_c2, \"AvailableJobCard\");\n$RefreshReg$(_c3, \"MyTaskItem\");\n$RefreshReg$(_c4, \"ErranderDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useCallback","useRef","Container","Row","Col","Card","Button","Spinner","Alert","Tabs","Tab","Table","Badge","Modal","Form","InputGroup","taskService","erranderService","withdrawalService","AuthContext","ChatWindow","io","jsxDEV","_jsxDEV","Fragment","_Fragment","SOCKET_URL","StatCard","icon","title","value","colorClass","onWithdraw","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","size","onClick","_c","AvailableJobCard","task","onApply","Header","as","service","name","Body","Text","description","estimatedPrice","_id","_c2","MyTaskItem","onUpdateStatus","onOpenChat","user","slice","status","replace","_c3","ErranderDashboard","_s","token","summary","setSummary","walletBalance","jobsCompleted","rating","pendingTasks","setPendingTasks","myTasks","setMyTasks","paymentHistory","setPaymentHistory","loading","setLoading","error","setError","showWithdrawModal","setShowWithdrawModal","withdrawAmount","setWithdrawAmount","mpesaNumber","setMpesaNumber","showChat","setShowChat","selectedTask","setSelectedTask","socketRef","fetchPendingTasks","res","getPendingTasks","data","err","console","fetchAllData","summaryRes","myTasksRes","historyRes","Promise","all","getDashboardSummary","getAssignedTasks","getPaymentHistory","current","emit","on","log","taskId","prev","filter","disconnect","handleApplyForTask","assignTask","alert","handleUpdateStatus","updateTaskStatus","handleOpenChat","handleWithdraw","e","activeTasks","t","md","defaultActiveKey","id","justify","eventKey","bg","length","map","striped","bordered","hover","responsive","p","Date","createdAt","toLocaleDateString","substring","finalPrice","colSpan","show","handleClose","recipientName","onHide","centered","_c4","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Errand/frontend/src/pages/ErranderDashboard.js"],"sourcesContent":["// frontend/src/pages/ErranderDashboard.js\r\nimport React, { useState, useEffect, useContext, useCallback, useRef } from 'react';\r\nimport { Container, Row, Col, Card, Button, Spinner, Alert, Tabs, Tab, Table, Badge, Modal, Form, InputGroup } from 'react-bootstrap';\r\nimport taskService from '../services/taskService';\r\nimport erranderService from '../services/erranderService';\r\nimport withdrawalService from '../services/withdrawalService';\r\nimport AuthContext from '../context/AuthContext';\r\nimport ChatWindow from '../components/ChatWindow';\r\nimport io from 'socket.io-client';\r\nimport './ErranderDashboard.css';\r\n\r\nconst SOCKET_URL = 'http://localhost:5000';\r\n\r\nconst StatCard = ({ icon, title, value, colorClass, onWithdraw }) => ( <div className=\"stat-card h-100\"><div className={`icon ${colorClass}`}>{icon}</div><h4 className=\"fw-bold\">{value}</h4><p className=\"text-muted\">{title}</p>{onWithdraw && <Button variant=\"success\" size=\"sm\" className=\"mt-2\" onClick={onWithdraw}>Withdraw</Button>}</div> );\r\nconst AvailableJobCard = ({ task, onApply }) => ( <Card className=\"mb-3 shadow-sm\"><Card.Header as=\"h5\">{task.service.name}</Card.Header><Card.Body><Card.Text>{task.description}</Card.Text><Card.Text><strong>Est. Payout:</strong> ${task.estimatedPrice}</Card.Text><Button variant=\"success\" onClick={() => onApply(task._id)}>Apply</Button></Card.Body></Card> );\r\nconst MyTaskItem = ({ task, onUpdateStatus, onOpenChat }) => ( <Card className=\"mb-3 shadow-sm\"><Card.Header className=\"d-flex justify-content-between align-items-center\"><span>Task for User: ...{task.user._id.slice(-6)}</span><span className=\"fw-bold text-primary text-capitalize\">{task.status.replace('_', ' ')}</span></Card.Header><Card.Body><Card.Text><strong>Description:</strong> {task.description}</Card.Text><div className=\"d-flex gap-2\">{task.status === 'accepted' && <Button variant=\"primary\" onClick={() => onUpdateStatus(task._id, 'in_progress')}>Start Task</Button>}{task.status === 'in_progress' && <Button variant=\"success\" onClick={() => onUpdateStatus(task._id, 'completed')}>Mark as Complete</Button>}<Button variant=\"outline-secondary\" onClick={() => onOpenChat(task)}>Chat with User</Button></div></Card.Body></Card> );\r\n\r\nconst ErranderDashboard = () => {\r\n    const { token } = useContext(AuthContext);\r\n    const [summary, setSummary] = useState({ walletBalance: '0.00', jobsCompleted: 0, rating: '5.0' });\r\n    const [pendingTasks, setPendingTasks] = useState([]);\r\n    const [myTasks, setMyTasks] = useState([]);\r\n    const [paymentHistory, setPaymentHistory] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [showWithdrawModal, setShowWithdrawModal] = useState(false);\r\n    const [withdrawAmount, setWithdrawAmount] = useState('');\r\n    const [mpesaNumber, setMpesaNumber] = useState('');\r\n    const [showChat, setShowChat] = useState(false);\r\n    const [selectedTask, setSelectedTask] = useState(null);\r\n    const socketRef = useRef(null);\r\n\r\n    const fetchPendingTasks = useCallback(async () => {\r\n        if (!token) return;\r\n        try {\r\n            const res = await taskService.getPendingTasks(token);\r\n            setPendingTasks(res.data);\r\n        } catch (err) {\r\n            console.error(\"Failed to fetch pending tasks\");\r\n        }\r\n    }, [token]);\r\n\r\n    const fetchAllData = useCallback(async () => {\r\n        if (!token) return;\r\n        setLoading(true);\r\n        try {\r\n            const [summaryRes, myTasksRes, historyRes] = await Promise.all([\r\n                erranderService.getDashboardSummary(token),\r\n                taskService.getAssignedTasks(token),\r\n                taskService.getPaymentHistory(token),\r\n            ]);\r\n            setSummary(summaryRes.data);\r\n            setMyTasks(myTasksRes.data);\r\n            setPaymentHistory(historyRes.data);\r\n            await fetchPendingTasks(); // Also fetch pending tasks initially\r\n        } catch (err) {\r\n            setError('Failed to load dashboard data.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [token, fetchPendingTasks]);\r\n\r\n    // --- THIS IS THE KEY UPDATE ---\r\n    useEffect(() => {\r\n        fetchAllData(); // Fetch all data on initial load\r\n        \r\n        socketRef.current = io(SOCKET_URL);\r\n        socketRef.current.emit('joinErranderRoom');\r\n\r\n        // Listen for new tasks being posted by ANY user\r\n        socketRef.current.on('newTaskAvailable', () => {\r\n            console.log(\"Real-time event: New task available! Refetching...\");\r\n            fetchPendingTasks();\r\n        });\r\n\r\n        // Listen for when ANOTHER errander takes a task\r\n        socketRef.current.on('taskTaken', ({ taskId }) => {\r\n            console.log(`Real-time event: Task ${taskId} was taken. Removing from list.`);\r\n            setPendingTasks(prev => prev.filter(task => task._id !== taskId));\r\n        });\r\n\r\n        // Cleanup on component unmount\r\n        return () => {\r\n            if (socketRef.current) {\r\n                socketRef.current.disconnect();\r\n            }\r\n        };\r\n    }, [fetchAllData, fetchPendingTasks]);\r\n\r\n\r\n    const handleApplyForTask = async (taskId) => {\r\n        try {\r\n            await taskService.assignTask(taskId, token);\r\n            alert('You got the job!');\r\n            fetchAllData(); // Refresh all data to move task and update lists\r\n        } catch (err) {\r\n            alert('Could not apply for task. It may have already been taken.');\r\n            setPendingTasks(prev => prev.filter(task => task._id !== taskId));\r\n        }\r\n    };\r\n    \r\n    const handleUpdateStatus = async (taskId, status) => {\r\n        try { await taskService.updateTaskStatus(taskId, status, token); fetchAllData(); }\r\n        catch (err) { alert('Failed to update task status.'); }\r\n    };\r\n    const handleOpenChat = (task) => { setSelectedTask(task); setShowChat(true); };\r\n    const handleWithdraw = async (e) => { /* ... same as before ... */ };\r\n\r\n    if (loading) return <Container className=\"text-center mt-5\"><Spinner /></Container>;\r\n\r\n    const activeTasks = myTasks.filter(t => t.status !== 'completed' && t.status !== 'paid' && t.status !== 'cancelled');\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"dashboard-container p-lg-4 p-md-3 p-2\">\r\n                <h2 className=\"mb-4 fw-bold\">Errander Dashboard</h2>\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                 <Row className=\"mb-4 g-3\">\r\n                    <Col md={4}><StatCard icon=\"💰\" title=\"Wallet\" value={`$${summary.walletBalance}`} colorClass=\"wallet-icon\" onWithdraw={() => setShowWithdrawModal(true)} /></Col>\r\n                    <Col md={4}><StatCard icon=\"📦\" title=\"Jobs Completed\" value={summary.jobsCompleted} colorClass=\"jobs-icon\" /></Col>\r\n                    <Col md={4}><StatCard icon=\"⭐\" title=\"Your Rating\" value={summary.rating} colorClass=\"rating-icon\" /></Col>\r\n                </Row>\r\n                 <div className=\"tasks-section\">\r\n                    <Tabs defaultActiveKey=\"available\" id=\"errander-tabs\" className=\"mb-3\" justify>\r\n                        <Tab eventKey=\"available\" title={<>Available Jobs <Badge bg=\"success\">{pendingTasks.length}</Badge></>}><div className=\"p-2\">{pendingTasks.length > 0 ? pendingTasks.map(task => <AvailableJobCard key={task._id} task={task} onApply={handleApplyForTask} />) : <Alert variant=\"light\" className=\"text-center\">No jobs available right now.</Alert>}</div></Tab>\r\n                        <Tab eventKey=\"my-tasks\" title={<>My Active Jobs <Badge bg=\"primary\">{activeTasks.length}</Badge></>}><div className=\"p-2\">{activeTasks.length > 0 ? activeTasks.map(task => <MyTaskItem key={task._id} task={task} onUpdateStatus={handleUpdateStatus} onOpenChat={handleOpenChat} />) : <Alert variant=\"light\" className=\"text-center\">You have no active jobs.</Alert>}</div></Tab>\r\n                        <Tab eventKey=\"payments\" title=\"Payment History\"><div className=\"p-2\"><Table striped bordered hover responsive><thead><tr><th>Date</th><th>Task</th><th>Payout</th></tr></thead><tbody>{paymentHistory.length > 0 ? paymentHistory.map(p => (<tr key={p._id}><td>{new Date(p.createdAt).toLocaleDateString()}</td><td>{p.description.substring(0, 50)}...</td><td>${p.finalPrice || p.estimatedPrice}</td></tr>)) : <tr><td colSpan=\"3\" className=\"text-center\">No payment history.</td></tr>}</tbody></Table></div></Tab>\r\n                    </Tabs>\r\n                </div>\r\n            </div>\r\n            {selectedTask && <ChatWindow show={showChat} handleClose={() => setShowChat(false)} taskId={selectedTask._id} recipientName={`User (...${selectedTask.user._id.slice(-6)})`}/>}\r\n            <Modal show={showWithdrawModal} onHide={() => setShowWithdrawModal(false)} centered>{/* ... Withdrawal Modal ... */}</Modal>\r\n        </>\r\n    );\r\n};\r\nexport default ErranderDashboard;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AACnF,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,MAAM,EAAEC,OAAO,EAAEC,KAAK,EAAEC,IAAI,EAAEC,GAAG,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,UAAU,QAAQ,iBAAiB;AACrI,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAOC,eAAe,MAAM,6BAA6B;AACzD,OAAOC,iBAAiB,MAAM,+BAA+B;AAC7D,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjC,MAAMC,UAAU,GAAG,uBAAuB;AAE1C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC,KAAK;EAAEC,UAAU;EAAEC;AAAW,CAAC,kBAAOT,OAAA;EAAKU,SAAS,EAAC,iBAAiB;EAAAC,QAAA,gBAACX,OAAA;IAAKU,SAAS,EAAE,QAAQF,UAAU,EAAG;IAAAG,QAAA,EAAEN;EAAI;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC,eAAAf,OAAA;IAAIU,SAAS,EAAC,SAAS;IAAAC,QAAA,EAAEJ;EAAK;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC,eAAAf,OAAA;IAAGU,SAAS,EAAC,YAAY;IAAAC,QAAA,EAAEL;EAAK;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,EAACN,UAAU,iBAAIT,OAAA,CAACjB,MAAM;IAACiC,OAAO,EAAC,SAAS;IAACC,IAAI,EAAC,IAAI;IAACP,SAAS,EAAC,MAAM;IAACQ,OAAO,EAAET,UAAW;IAAAE,QAAA,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAM,CAAG;AAACI,EAAA,GAAjVf,QAAQ;AACd,MAAMgB,gBAAgB,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAQ,CAAC,kBAAOtB,OAAA,CAAClB,IAAI;EAAC4B,SAAS,EAAC,gBAAgB;EAAAC,QAAA,gBAACX,OAAA,CAAClB,IAAI,CAACyC,MAAM;IAACC,EAAE,EAAC,IAAI;IAAAb,QAAA,EAAEU,IAAI,CAACI,OAAO,CAACC;EAAI;IAAAd,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAc,CAAC,eAAAf,OAAA,CAAClB,IAAI,CAAC6C,IAAI;IAAAhB,QAAA,gBAACX,OAAA,CAAClB,IAAI,CAAC8C,IAAI;MAAAjB,QAAA,EAAEU,IAAI,CAACQ;IAAW;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAAAf,OAAA,CAAClB,IAAI,CAAC8C,IAAI;MAAAjB,QAAA,gBAACX,OAAA;QAAAW,QAAA,EAAQ;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,MAAE,EAACM,IAAI,CAACS,cAAc;IAAA;MAAAlB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAAAf,OAAA,CAACjB,MAAM;MAACiC,OAAO,EAAC,SAAS;MAACE,OAAO,EAAEA,CAAA,KAAMI,OAAO,CAACD,IAAI,CAACU,GAAG,CAAE;MAAApB,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAW,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAM,CAAG;AAACiB,GAAA,GAAlWZ,gBAAgB;AACtB,MAAMa,UAAU,GAAGA,CAAC;EAAEZ,IAAI;EAAEa,cAAc;EAAEC;AAAW,CAAC,kBAAOnC,OAAA,CAAClB,IAAI;EAAC4B,SAAS,EAAC,gBAAgB;EAAAC,QAAA,gBAACX,OAAA,CAAClB,IAAI,CAACyC,MAAM;IAACb,SAAS,EAAC,mDAAmD;IAAAC,QAAA,gBAACX,OAAA;MAAAW,QAAA,GAAM,oBAAkB,EAACU,IAAI,CAACe,IAAI,CAACL,GAAG,CAACM,KAAK,CAAC,CAAC,CAAC,CAAC;IAAA;MAAAzB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAAAf,OAAA;MAAMU,SAAS,EAAC,sCAAsC;MAAAC,QAAA,EAAEU,IAAI,CAACiB,MAAM,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG;IAAC;MAAA3B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAa,CAAC,eAAAf,OAAA,CAAClB,IAAI,CAAC6C,IAAI;IAAAhB,QAAA,gBAACX,OAAA,CAAClB,IAAI,CAAC8C,IAAI;MAAAjB,QAAA,gBAACX,OAAA;QAAAW,QAAA,EAAQ;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACM,IAAI,CAACQ,WAAW;IAAA;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAAAf,OAAA;MAAKU,SAAS,EAAC,cAAc;MAAAC,QAAA,GAAEU,IAAI,CAACiB,MAAM,KAAK,UAAU,iBAAItC,OAAA,CAACjB,MAAM;QAACiC,OAAO,EAAC,SAAS;QAACE,OAAO,EAAEA,CAAA,KAAMgB,cAAc,CAACb,IAAI,CAACU,GAAG,EAAE,aAAa,CAAE;QAAApB,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAAEM,IAAI,CAACiB,MAAM,KAAK,aAAa,iBAAItC,OAAA,CAACjB,MAAM;QAACiC,OAAO,EAAC,SAAS;QAACE,OAAO,EAAEA,CAAA,KAAMgB,cAAc,CAACb,IAAI,CAACU,GAAG,EAAE,WAAW,CAAE;QAAApB,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAACf,OAAA,CAACjB,MAAM;QAACiC,OAAO,EAAC,mBAAmB;QAACE,OAAO,EAAEA,CAAA,KAAMiB,UAAU,CAACd,IAAI,CAAE;QAAAV,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAW,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAM,CAAG;AAACyB,GAAA,GAAj0BP,UAAU;AAEhB,MAAMQ,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAM,CAAC,GAAGnE,UAAU,CAACoB,WAAW,CAAC;EACzC,MAAM,CAACgD,OAAO,EAAEC,UAAU,CAAC,GAAGvE,QAAQ,CAAC;IAAEwE,aAAa,EAAE,MAAM;IAAEC,aAAa,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAM,CAAC,CAAC;EAClG,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG5E,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC6E,OAAO,EAAEC,UAAU,CAAC,GAAG9E,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC+E,cAAc,EAAEC,iBAAiB,CAAC,GAAGhF,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACiF,OAAO,EAAEC,UAAU,CAAC,GAAGlF,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmF,KAAK,EAAEC,QAAQ,CAAC,GAAGpF,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACqF,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGtF,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACuF,cAAc,EAAEC,iBAAiB,CAAC,GAAGxF,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACyF,WAAW,EAAEC,cAAc,CAAC,GAAG1F,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC2F,QAAQ,EAAEC,WAAW,CAAC,GAAG5F,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC6F,YAAY,EAAEC,eAAe,CAAC,GAAG9F,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM+F,SAAS,GAAG3F,MAAM,CAAC,IAAI,CAAC;EAE9B,MAAM4F,iBAAiB,GAAG7F,WAAW,CAAC,YAAY;IAC9C,IAAI,CAACkE,KAAK,EAAE;IACZ,IAAI;MACA,MAAM4B,GAAG,GAAG,MAAM9E,WAAW,CAAC+E,eAAe,CAAC7B,KAAK,CAAC;MACpDO,eAAe,CAACqB,GAAG,CAACE,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVC,OAAO,CAAClB,KAAK,CAAC,+BAA+B,CAAC;IAClD;EACJ,CAAC,EAAE,CAACd,KAAK,CAAC,CAAC;EAEX,MAAMiC,YAAY,GAAGnG,WAAW,CAAC,YAAY;IACzC,IAAI,CAACkE,KAAK,EAAE;IACZa,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACA,MAAM,CAACqB,UAAU,EAAEC,UAAU,EAAEC,UAAU,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC3DvF,eAAe,CAACwF,mBAAmB,CAACvC,KAAK,CAAC,EAC1ClD,WAAW,CAAC0F,gBAAgB,CAACxC,KAAK,CAAC,EACnClD,WAAW,CAAC2F,iBAAiB,CAACzC,KAAK,CAAC,CACvC,CAAC;MACFE,UAAU,CAACgC,UAAU,CAACJ,IAAI,CAAC;MAC3BrB,UAAU,CAAC0B,UAAU,CAACL,IAAI,CAAC;MAC3BnB,iBAAiB,CAACyB,UAAU,CAACN,IAAI,CAAC;MAClC,MAAMH,iBAAiB,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,OAAOI,GAAG,EAAE;MACVhB,QAAQ,CAAC,gCAAgC,CAAC;IAC9C,CAAC,SAAS;MACNF,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC,EAAE,CAACb,KAAK,EAAE2B,iBAAiB,CAAC,CAAC;;EAE9B;EACA/F,SAAS,CAAC,MAAM;IACZqG,YAAY,CAAC,CAAC,CAAC,CAAC;;IAEhBP,SAAS,CAACgB,OAAO,GAAGvF,EAAE,CAACK,UAAU,CAAC;IAClCkE,SAAS,CAACgB,OAAO,CAACC,IAAI,CAAC,kBAAkB,CAAC;;IAE1C;IACAjB,SAAS,CAACgB,OAAO,CAACE,EAAE,CAAC,kBAAkB,EAAE,MAAM;MAC3CZ,OAAO,CAACa,GAAG,CAAC,oDAAoD,CAAC;MACjElB,iBAAiB,CAAC,CAAC;IACvB,CAAC,CAAC;;IAEF;IACAD,SAAS,CAACgB,OAAO,CAACE,EAAE,CAAC,WAAW,EAAE,CAAC;MAAEE;IAAO,CAAC,KAAK;MAC9Cd,OAAO,CAACa,GAAG,CAAC,yBAAyBC,MAAM,iCAAiC,CAAC;MAC7EvC,eAAe,CAACwC,IAAI,IAAIA,IAAI,CAACC,MAAM,CAACtE,IAAI,IAAIA,IAAI,CAACU,GAAG,KAAK0D,MAAM,CAAC,CAAC;IACrE,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACT,IAAIpB,SAAS,CAACgB,OAAO,EAAE;QACnBhB,SAAS,CAACgB,OAAO,CAACO,UAAU,CAAC,CAAC;MAClC;IACJ,CAAC;EACL,CAAC,EAAE,CAAChB,YAAY,EAAEN,iBAAiB,CAAC,CAAC;EAGrC,MAAMuB,kBAAkB,GAAG,MAAOJ,MAAM,IAAK;IACzC,IAAI;MACA,MAAMhG,WAAW,CAACqG,UAAU,CAACL,MAAM,EAAE9C,KAAK,CAAC;MAC3CoD,KAAK,CAAC,kBAAkB,CAAC;MACzBnB,YAAY,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,OAAOF,GAAG,EAAE;MACVqB,KAAK,CAAC,2DAA2D,CAAC;MAClE7C,eAAe,CAACwC,IAAI,IAAIA,IAAI,CAACC,MAAM,CAACtE,IAAI,IAAIA,IAAI,CAACU,GAAG,KAAK0D,MAAM,CAAC,CAAC;IACrE;EACJ,CAAC;EAED,MAAMO,kBAAkB,GAAG,MAAAA,CAAOP,MAAM,EAAEnD,MAAM,KAAK;IACjD,IAAI;MAAE,MAAM7C,WAAW,CAACwG,gBAAgB,CAACR,MAAM,EAAEnD,MAAM,EAAEK,KAAK,CAAC;MAAEiC,YAAY,CAAC,CAAC;IAAE,CAAC,CAClF,OAAOF,GAAG,EAAE;MAAEqB,KAAK,CAAC,+BAA+B,CAAC;IAAE;EAC1D,CAAC;EACD,MAAMG,cAAc,GAAI7E,IAAI,IAAK;IAAE+C,eAAe,CAAC/C,IAAI,CAAC;IAAE6C,WAAW,CAAC,IAAI,CAAC;EAAE,CAAC;EAC9E,MAAMiC,cAAc,GAAG,MAAOC,CAAC,IAAK,CAAE,6BAA8B;EAEpE,IAAI7C,OAAO,EAAE,oBAAOvD,OAAA,CAACrB,SAAS;IAAC+B,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAACX,OAAA,CAAChB,OAAO;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAW,CAAC;EAEnF,MAAMsF,WAAW,GAAGlD,OAAO,CAACwC,MAAM,CAACW,CAAC,IAAIA,CAAC,CAAChE,MAAM,KAAK,WAAW,IAAIgE,CAAC,CAAChE,MAAM,KAAK,MAAM,IAAIgE,CAAC,CAAChE,MAAM,KAAK,WAAW,CAAC;EAEpH,oBACItC,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACIX,OAAA;MAAKU,SAAS,EAAC,uCAAuC;MAAAC,QAAA,gBAClDX,OAAA;QAAIU,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACnD0C,KAAK,iBAAIzD,OAAA,CAACf,KAAK;QAAC+B,OAAO,EAAC,QAAQ;QAAAL,QAAA,EAAE8C;MAAK;QAAA7C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChDf,OAAA,CAACpB,GAAG;QAAC8B,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACtBX,OAAA,CAACnB,GAAG;UAAC0H,EAAE,EAAE,CAAE;UAAA5F,QAAA,eAACX,OAAA,CAACI,QAAQ;YAACC,IAAI,EAAC,cAAI;YAACC,KAAK,EAAC,QAAQ;YAACC,KAAK,EAAE,IAAIqC,OAAO,CAACE,aAAa,EAAG;YAACtC,UAAU,EAAC,aAAa;YAACC,UAAU,EAAEA,CAAA,KAAMmD,oBAAoB,CAAC,IAAI;UAAE;YAAAhD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAClKf,OAAA,CAACnB,GAAG;UAAC0H,EAAE,EAAE,CAAE;UAAA5F,QAAA,eAACX,OAAA,CAACI,QAAQ;YAACC,IAAI,EAAC,cAAI;YAACC,KAAK,EAAC,gBAAgB;YAACC,KAAK,EAAEqC,OAAO,CAACG,aAAc;YAACvC,UAAU,EAAC;UAAW;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpHf,OAAA,CAACnB,GAAG;UAAC0H,EAAE,EAAE,CAAE;UAAA5F,QAAA,eAACX,OAAA,CAACI,QAAQ;YAACC,IAAI,EAAC,QAAG;YAACC,KAAK,EAAC,aAAa;YAACC,KAAK,EAAEqC,OAAO,CAACI,MAAO;YAACxC,UAAU,EAAC;UAAa;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1G,CAAC,eACLf,OAAA;QAAKU,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC3BX,OAAA,CAACd,IAAI;UAACsH,gBAAgB,EAAC,WAAW;UAACC,EAAE,EAAC,eAAe;UAAC/F,SAAS,EAAC,MAAM;UAACgG,OAAO;UAAA/F,QAAA,gBAC1EX,OAAA,CAACb,GAAG;YAACwH,QAAQ,EAAC,WAAW;YAACrG,KAAK,eAAEN,OAAA,CAAAE,SAAA;cAAAS,QAAA,GAAE,iBAAe,eAAAX,OAAA,CAACX,KAAK;gBAACuH,EAAE,EAAC,SAAS;gBAAAjG,QAAA,EAAEsC,YAAY,CAAC4D;cAAM;gBAAAjG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA,eAAE,CAAE;YAAAJ,QAAA,eAACX,OAAA;cAAKU,SAAS,EAAC,KAAK;cAAAC,QAAA,EAAEsC,YAAY,CAAC4D,MAAM,GAAG,CAAC,GAAG5D,YAAY,CAAC6D,GAAG,CAACzF,IAAI,iBAAIrB,OAAA,CAACoB,gBAAgB;gBAAgBC,IAAI,EAAEA,IAAK;gBAACC,OAAO,EAAEuE;cAAmB,GAAlDxE,IAAI,CAACU,GAAG;gBAAAnB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAA4C,CAAC,CAAC,gBAAGf,OAAA,CAACf,KAAK;gBAAC+B,OAAO,EAAC,OAAO;gBAACN,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAA4B;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACjWf,OAAA,CAACb,GAAG;YAACwH,QAAQ,EAAC,UAAU;YAACrG,KAAK,eAAEN,OAAA,CAAAE,SAAA;cAAAS,QAAA,GAAE,iBAAe,eAAAX,OAAA,CAACX,KAAK;gBAACuH,EAAE,EAAC,SAAS;gBAAAjG,QAAA,EAAE0F,WAAW,CAACQ;cAAM;gBAAAjG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA,eAAE,CAAE;YAAAJ,QAAA,eAACX,OAAA;cAAKU,SAAS,EAAC,KAAK;cAAAC,QAAA,EAAE0F,WAAW,CAACQ,MAAM,GAAG,CAAC,GAAGR,WAAW,CAACS,GAAG,CAACzF,IAAI,iBAAIrB,OAAA,CAACiC,UAAU;gBAAgBZ,IAAI,EAAEA,IAAK;gBAACa,cAAc,EAAE8D,kBAAmB;gBAAC7D,UAAU,EAAE+D;cAAe,GAArF7E,IAAI,CAACU,GAAG;gBAAAnB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAA+E,CAAC,CAAC,gBAAGf,OAAA,CAACf,KAAK;gBAAC+B,OAAO,EAAC,OAAO;gBAACN,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAAwB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtXf,OAAA,CAACb,GAAG;YAACwH,QAAQ,EAAC,UAAU;YAACrG,KAAK,EAAC,iBAAiB;YAAAK,QAAA,eAACX,OAAA;cAAKU,SAAS,EAAC,KAAK;cAAAC,QAAA,eAACX,OAAA,CAACZ,KAAK;gBAAC2H,OAAO;gBAACC,QAAQ;gBAACC,KAAK;gBAACC,UAAU;gBAAAvG,QAAA,gBAACX,OAAA;kBAAAW,QAAA,eAAOX,OAAA;oBAAAW,QAAA,gBAAIX,OAAA;sBAAAW,QAAA,EAAI;oBAAI;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eAAAf,OAAA;sBAAAW,QAAA,EAAI;oBAAI;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eAAAf,OAAA;sBAAAW,QAAA,EAAI;oBAAM;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAAAf,OAAA;kBAAAW,QAAA,EAAQ0C,cAAc,CAACwD,MAAM,GAAG,CAAC,GAAGxD,cAAc,CAACyD,GAAG,CAACK,CAAC,iBAAKnH,OAAA;oBAAAW,QAAA,gBAAgBX,OAAA;sBAAAW,QAAA,EAAK,IAAIyG,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,CAACC,kBAAkB,CAAC;oBAAC;sBAAA1G,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eAAAf,OAAA;sBAAAW,QAAA,GAAKwG,CAAC,CAACtF,WAAW,CAAC0F,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,EAAC,KAAG;oBAAA;sBAAA3G,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eAAAf,OAAA;sBAAAW,QAAA,GAAI,GAAC,EAACwG,CAAC,CAACK,UAAU,IAAIL,CAAC,CAACrF,cAAc;oBAAA;sBAAAlB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC;kBAAA,GAApJoG,CAAC,CAACpF,GAAG;oBAAAnB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAmJ,CAAE,CAAC,gBAAGf,OAAA;oBAAAW,QAAA,eAAIX,OAAA;sBAAIyH,OAAO,EAAC,GAAG;sBAAC/G,SAAS,EAAC,aAAa;sBAAAC,QAAA,EAAC;oBAAmB;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxf;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EACLoD,YAAY,iBAAInE,OAAA,CAACH,UAAU;MAAC6H,IAAI,EAAEzD,QAAS;MAAC0D,WAAW,EAAEA,CAAA,KAAMzD,WAAW,CAAC,KAAK,CAAE;MAACuB,MAAM,EAAEtB,YAAY,CAACpC,GAAI;MAAC6F,aAAa,EAAE,YAAYzD,YAAY,CAAC/B,IAAI,CAACL,GAAG,CAACM,KAAK,CAAC,CAAC,CAAC,CAAC;IAAI;MAAAzB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC9Kf,OAAA,CAACV,KAAK;MAACoI,IAAI,EAAE/D,iBAAkB;MAACkE,MAAM,EAAEA,CAAA,KAAMjE,oBAAoB,CAAC,KAAK,CAAE;MAACkE,QAAQ;IAAA;MAAAlH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAwC,CAAC;EAAA,eAC9H,CAAC;AAEX,CAAC;AAAC2B,EAAA,CArHID,iBAAiB;AAAAsF,GAAA,GAAjBtF,iBAAiB;AAsHvB,eAAeA,iBAAiB;AAAC,IAAAtB,EAAA,EAAAa,GAAA,EAAAQ,GAAA,EAAAuF,GAAA;AAAAC,YAAA,CAAA7G,EAAA;AAAA6G,YAAA,CAAAhG,GAAA;AAAAgG,YAAA,CAAAxF,GAAA;AAAAwF,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}