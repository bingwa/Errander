{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Errand\\\\frontend\\\\src\\\\components\\\\ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport { Modal, Button, Form, InputGroup, ListGroup } from 'react-bootstrap';\nimport io from 'socket.io-client';\nimport chatService from '../services/chatService';\nimport AuthContext from '../context/AuthContext';\nimport './ChatWindow.css'; // We will create this CSS file next\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCKET_URL = 'http://localhost:5000';\nconst ChatWindow = ({\n  show,\n  handleClose,\n  taskId,\n  recipientName\n}) => {\n  _s();\n  const {\n    user,\n    token\n  } = useContext(AuthContext);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const socketRef = useRef(null);\n  const messageEndRef = useRef(null);\n  useEffect(() => {\n    if (show) {\n      // Fetch message history when chat opens\n      chatService.getChatHistory(taskId, token).then(res => setMessages(res.data)).catch(err => console.error(\"Failed to fetch chat history\", err));\n\n      // Connect to WebSocket\n      socketRef.current = io(SOCKET_URL);\n      socketRef.current.emit('joinTaskRoom', taskId);\n      socketRef.current.on('receiveMessage', message => {\n        setMessages(prevMessages => [...prevMessages, message]);\n      });\n      return () => socketRef.current.disconnect();\n    }\n  }, [show, taskId, token]);\n  useEffect(() => {\n    var _messageEndRef$curren;\n    // Scroll to the latest message\n    (_messageEndRef$curren = messageEndRef.current) === null || _messageEndRef$curren === void 0 ? void 0 : _messageEndRef$curren.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (newMessage.trim() === '') return;\n    const messageData = {\n      taskId,\n      sender: user.id,\n      // Assumes user.id from token is the User model's _id\n      text: newMessage\n    };\n    socketRef.current.emit('sendMessage', messageData);\n    setNewMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: handleClose,\n    centered: true,\n    size: \"lg\",\n    scrollable: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: [\"Chat with \", recipientName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      className: \"chat-body\",\n      children: [/*#__PURE__*/_jsxDEV(ListGroup, {\n        variant: \"flush\",\n        children: messages.map(msg => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          className: `d-flex ${msg.sender === user.id ? 'justify-content-end' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message-bubble ${msg.sender === user.id ? 'sent' : 'received'}`,\n            children: [msg.text, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-timestamp\",\n              children: new Date(msg.createdAt).toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)\n        }, msg._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messageEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSendMessage,\n        className: \"w-100\",\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            placeholder: \"Type a message...\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatWindow, \"wPGCuyfo5cnYvNGnT+oUkiY0OCc=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useContext","Modal","Button","Form","InputGroup","ListGroup","io","chatService","AuthContext","jsxDEV","_jsxDEV","SOCKET_URL","ChatWindow","show","handleClose","taskId","recipientName","_s","user","token","messages","setMessages","newMessage","setNewMessage","socketRef","messageEndRef","getChatHistory","then","res","data","catch","err","console","error","current","emit","on","message","prevMessages","disconnect","_messageEndRef$curren","scrollIntoView","behavior","handleSendMessage","e","preventDefault","trim","messageData","sender","id","text","onHide","centered","size","scrollable","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","className","variant","map","msg","Item","Date","createdAt","toLocaleTimeString","_id","ref","Footer","onSubmit","Control","placeholder","value","onChange","target","type","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Errand/frontend/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { Modal, Button, Form, InputGroup, ListGroup } from 'react-bootstrap';\r\nimport io from 'socket.io-client';\r\nimport chatService from '../services/chatService';\r\nimport AuthContext from '../context/AuthContext';\r\nimport './ChatWindow.css'; // We will create this CSS file next\r\n\r\nconst SOCKET_URL = 'http://localhost:5000';\r\n\r\nconst ChatWindow = ({ show, handleClose, taskId, recipientName }) => {\r\n    const { user, token } = useContext(AuthContext);\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const socketRef = useRef(null);\r\n    const messageEndRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (show) {\r\n            // Fetch message history when chat opens\r\n            chatService.getChatHistory(taskId, token)\r\n                .then(res => setMessages(res.data))\r\n                .catch(err => console.error(\"Failed to fetch chat history\", err));\r\n\r\n            // Connect to WebSocket\r\n            socketRef.current = io(SOCKET_URL);\r\n            socketRef.current.emit('joinTaskRoom', taskId);\r\n            \r\n            socketRef.current.on('receiveMessage', (message) => {\r\n                setMessages(prevMessages => [...prevMessages, message]);\r\n            });\r\n\r\n            return () => socketRef.current.disconnect();\r\n        }\r\n    }, [show, taskId, token]);\r\n\r\n    useEffect(() => {\r\n        // Scroll to the latest message\r\n        messageEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n    }, [messages]);\r\n\r\n    const handleSendMessage = (e) => {\r\n        e.preventDefault();\r\n        if (newMessage.trim() === '') return;\r\n\r\n        const messageData = {\r\n            taskId,\r\n            sender: user.id, // Assumes user.id from token is the User model's _id\r\n            text: newMessage,\r\n        };\r\n\r\n        socketRef.current.emit('sendMessage', messageData);\r\n        setNewMessage('');\r\n    };\r\n\r\n    return (\r\n        <Modal show={show} onHide={handleClose} centered size=\"lg\" scrollable>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Chat with {recipientName}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"chat-body\">\r\n                <ListGroup variant=\"flush\">\r\n                    {messages.map((msg) => (\r\n                        <ListGroup.Item key={msg._id} className={`d-flex ${msg.sender === user.id ? 'justify-content-end' : ''}`}>\r\n                            <div className={`message-bubble ${msg.sender === user.id ? 'sent' : 'received'}`}>\r\n                                {msg.text}\r\n                                <div className=\"message-timestamp\">{new Date(msg.createdAt).toLocaleTimeString()}</div>\r\n                            </div>\r\n                        </ListGroup.Item>\r\n                    ))}\r\n                </ListGroup>\r\n                <div ref={messageEndRef} />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Form onSubmit={handleSendMessage} className=\"w-100\">\r\n                    <InputGroup>\r\n                        <Form.Control \r\n                            placeholder=\"Type a message...\" \r\n                            value={newMessage}\r\n                            onChange={(e) => setNewMessage(e.target.value)}\r\n                        />\r\n                        <Button variant=\"primary\" type=\"submit\">Send</Button>\r\n                    </InputGroup>\r\n                </Form>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}