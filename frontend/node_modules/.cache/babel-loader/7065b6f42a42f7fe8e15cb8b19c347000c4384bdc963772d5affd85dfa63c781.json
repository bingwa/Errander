{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Errand\\\\frontend\\\\src\\\\pages\\\\ErranderDashboard.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// frontend/src/pages/ErranderDashboard.js\n\n// Reusable component for the statistics cards\nconst StatCard = ({\n  icon,\n  title,\n  value,\n  colorClass\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"stat-card h-100\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: `icon ${colorClass}`,\n    children: icon\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n    className: \"fw-bold\",\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-muted\",\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 5\n}, this);\n\n// Component for displaying a single pending job\n_c = StatCard;\nconst AvailableJobCard = ({\n  task,\n  onApply\n}) => /*#__PURE__*/_jsxDEV(Card, {\n  className: \"mb-3 shadow-sm\",\n  children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n    as: \"h5\",\n    children: task.service.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n      children: task.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Estimated Payout:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 24\n      }, this), \" $\", task.estimatedPrice]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"success\",\n      onClick: () => onApply(task._id),\n      children: \"View & Apply\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 5\n}, this);\n_c2 = AvailableJobCard;\nconst ErranderDashboard = () => {\n  _s();\n  const {\n    user,\n    token\n  } = useContext(AuthContext);\n  const [summary, setSummary] = useState({\n    walletBalance: '0.00',\n    jobsCompleted: 0,\n    rating: '5.0'\n  });\n  const [pendingTasks, setPendingTasks] = useState([]);\n  const [myTasks, setMyTasks] = useState([]);\n  const [paymentHistory, setPaymentHistory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const fetchData = useCallback(async () => {\n    if (!token) return;\n    setLoading(true);\n    try {\n      const [summaryRes, pendingRes, myTasksRes, historyRes] = await Promise.all([erranderService.getDashboardSummary(token), taskService.getPendingTasks(token), taskService.getAssignedTasks(token), taskService.getPaymentHistory(token)]);\n      setSummary(summaryRes.data);\n      setPendingTasks(pendingRes.data);\n      setMyTasks(myTasksRes.data);\n      setPaymentHistory(historyRes.data);\n    } catch (err) {\n      setError('Failed to load dashboard data. Please refresh the page.');\n    } finally {\n      setLoading(false);\n    }\n  }, [token]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  const handleApplyForTask = async taskId => {\n    // This logic needs to be double-checked against the user model.\n    // Assuming the `user` object in the token has the `_id` of the *User*, but we need the *Errander* ID.\n    // For now, this is a placeholder to demonstrate functionality.\n    // In a real app, you might need another API call to get the errander ID from the user ID.\n    try {\n      var _myTasks$;\n      // Placeholder: This assumes the user ID can be used to assign.\n      // A more robust solution might be needed here.\n      const erranderProfile = (_myTasks$ = myTasks[0]) === null || _myTasks$ === void 0 ? void 0 : _myTasks$.errander; // A hacky way to get the errander ID if they have tasks\n      if (!erranderProfile) {\n        alert('Could not determine your errander profile ID.');\n        return;\n      }\n      await taskService.assignTask(taskId, erranderProfile, token);\n      alert('You have successfully applied for the task!');\n      fetchData();\n    } catch (err) {\n      alert('Could not apply for task. It may have already been taken.');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"text-center mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 65\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container p-lg-4 p-md-3 p-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4 fw-bold\",\n      children: \"Errander Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-4 g-3\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(StatCard, {\n          icon: \"\\uD83D\\uDCB0\",\n          title: \"Wallet\",\n          value: `$${summary.walletBalance}`,\n          colorClass: \"wallet-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(StatCard, {\n          icon: \"\\uD83D\\uDCE6\",\n          title: \"Jobs Completed\",\n          value: summary.jobsCompleted,\n          colorClass: \"jobs-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(StatCard, {\n          icon: \"\\u2B50\",\n          title: \"Your Rating\",\n          value: summary.rating,\n          colorClass: \"rating-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-section\",\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        defaultActiveKey: \"available\",\n        id: \"errander-tabs\",\n        className: \"mb-3\",\n        justify: true,\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"available\",\n          title: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fw-bold\",\n              children: \"Available Jobs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 56\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"success\",\n              children: pendingTasks.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 104\n            }, this)]\n          }, void 0, true),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2\",\n            children: pendingTasks.length > 0 ? pendingTasks.map(task => /*#__PURE__*/_jsxDEV(AvailableJobCard, {\n              task: task,\n              onApply: handleApplyForTask\n            }, task._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this)) : /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"light\",\n              className: \"text-center\",\n              children: \"No jobs available right now. Check back soon!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"my-tasks\",\n          title: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fw-bold\",\n              children: \"My Jobs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 55\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"primary\",\n              children: myTasks.filter(t => t.status !== 'completed').length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 96\n            }, this)]\n          }, void 0, true),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2\",\n            children: myTasks.length > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [myTasks.length, \" tasks assigned to you.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 50\n            }, this) : /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"light\",\n              className: \"text-center\",\n              children: \"You have no active or completed jobs.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 99\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"payments\",\n          title: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fw-bold\",\n              children: \"Payment History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 55\n            }, this)\n          }, void 0, false),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              striped: true,\n              bordered: true,\n              hover: true,\n              responsive: true,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Task Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 54\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Payout\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 79\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: paymentHistory.length > 0 ? paymentHistory.map(p => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: new Date(p.createdAt).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: p.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [\"$\", p.finalPrice || p.estimatedPrice]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 45\n                  }, this)]\n                }, p._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 41\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"3\",\n                    className: \"text-center\",\n                    children: \"No payment history.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 46\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 42\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(ErranderDashboard, \"jz3pQG/e5cFVWjMkwcFv+YchJC4=\");\n_c3 = ErranderDashboard;\nexport default ErranderDashboard;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StatCard\");\n$RefreshReg$(_c2, \"AvailableJobCard\");\n$RefreshReg$(_c3, \"ErranderDashboard\");","map":{"version":3,"names":["StatCard","icon","title","value","colorClass","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","AvailableJobCard","task","onApply","Card","Header","as","service","name","Body","Text","description","estimatedPrice","Button","variant","onClick","_id","_c2","ErranderDashboard","_s","user","token","useContext","AuthContext","summary","setSummary","useState","walletBalance","jobsCompleted","rating","pendingTasks","setPendingTasks","myTasks","setMyTasks","paymentHistory","setPaymentHistory","loading","setLoading","error","setError","fetchData","useCallback","summaryRes","pendingRes","myTasksRes","historyRes","Promise","all","erranderService","getDashboardSummary","taskService","getPendingTasks","getAssignedTasks","getPaymentHistory","data","err","useEffect","handleApplyForTask","taskId","_myTasks$","erranderProfile","errander","alert","assignTask","Container","Spinner","Alert","Row","Col","md","Tabs","defaultActiveKey","id","justify","Tab","eventKey","_Fragment","Badge","bg","length","map","filter","t","status","Table","striped","bordered","hover","responsive","p","Date","createdAt","toLocaleDateString","finalPrice","colSpan","_c3","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Errand/frontend/src/pages/ErranderDashboard.js"],"sourcesContent":["// frontend/src/pages/ErranderDashboard.js\r\n\r\n\r\n// Reusable component for the statistics cards\r\nconst StatCard = ({ icon, title, value, colorClass }) => (\r\n    <div className=\"stat-card h-100\">\r\n        <div className={`icon ${colorClass}`}>{icon}</div>\r\n        <h4 className=\"fw-bold\">{value}</h4>\r\n        <p className=\"text-muted\">{title}</p>\r\n    </div>\r\n);\r\n\r\n// Component for displaying a single pending job\r\nconst AvailableJobCard = ({ task, onApply }) => (\r\n    <Card className=\"mb-3 shadow-sm\">\r\n        <Card.Header as=\"h5\">{task.service.name}</Card.Header>\r\n        <Card.Body>\r\n            <Card.Text>{task.description}</Card.Text>\r\n            <Card.Text><strong>Estimated Payout:</strong> ${task.estimatedPrice}</Card.Text>\r\n            <Button variant=\"success\" onClick={() => onApply(task._id)}>View & Apply</Button>\r\n        </Card.Body>\r\n    </Card>\r\n);\r\n\r\nconst ErranderDashboard = () => {\r\n    const { user, token } = useContext(AuthContext);\r\n    const [summary, setSummary] = useState({ walletBalance: '0.00', jobsCompleted: 0, rating: '5.0' });\r\n    const [pendingTasks, setPendingTasks] = useState([]);\r\n    const [myTasks, setMyTasks] = useState([]);\r\n    const [paymentHistory, setPaymentHistory] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n\r\n    const fetchData = useCallback(async () => {\r\n        if (!token) return;\r\n        setLoading(true);\r\n        try {\r\n            const [summaryRes, pendingRes, myTasksRes, historyRes] = await Promise.all([\r\n                erranderService.getDashboardSummary(token),\r\n                taskService.getPendingTasks(token),\r\n                taskService.getAssignedTasks(token),\r\n                taskService.getPaymentHistory(token)\r\n            ]);\r\n            setSummary(summaryRes.data);\r\n            setPendingTasks(pendingRes.data);\r\n            setMyTasks(myTasksRes.data);\r\n            setPaymentHistory(historyRes.data);\r\n        } catch (err) {\r\n            setError('Failed to load dashboard data. Please refresh the page.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [token]);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [fetchData]);\r\n\r\n    const handleApplyForTask = async (taskId) => {\r\n        // This logic needs to be double-checked against the user model.\r\n        // Assuming the `user` object in the token has the `_id` of the *User*, but we need the *Errander* ID.\r\n        // For now, this is a placeholder to demonstrate functionality.\r\n        // In a real app, you might need another API call to get the errander ID from the user ID.\r\n        try {\r\n            // Placeholder: This assumes the user ID can be used to assign.\r\n            // A more robust solution might be needed here.\r\n            const erranderProfile = myTasks[0]?.errander; // A hacky way to get the errander ID if they have tasks\r\n            if (!erranderProfile) {\r\n                 alert('Could not determine your errander profile ID.');\r\n                 return;\r\n            }\r\n\r\n            await taskService.assignTask(taskId, erranderProfile, token);\r\n            alert('You have successfully applied for the task!');\r\n            fetchData();\r\n        } catch (err) {\r\n            alert('Could not apply for task. It may have already been taken.');\r\n        }\r\n    };\r\n\r\n    if (loading) return <Container className=\"text-center mt-5\"><Spinner /></Container>;\r\n\r\n    return (\r\n        <div className=\"dashboard-container p-lg-4 p-md-3 p-2\">\r\n            <h2 className=\"mb-4 fw-bold\">Errander Dashboard</h2>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            \r\n            <Row className=\"mb-4 g-3\">\r\n                <Col md={4}><StatCard icon=\"💰\" title=\"Wallet\" value={`$${summary.walletBalance}`} colorClass=\"wallet-icon\" /></Col>\r\n                <Col md={4}><StatCard icon=\"📦\" title=\"Jobs Completed\" value={summary.jobsCompleted} colorClass=\"jobs-icon\" /></Col>\r\n                <Col md={4}><StatCard icon=\"⭐\" title=\"Your Rating\" value={summary.rating} colorClass=\"rating-icon\" /></Col>\r\n            </Row>\r\n\r\n            <div className=\"tasks-section\">\r\n                <Tabs defaultActiveKey=\"available\" id=\"errander-tabs\" className=\"mb-3\" justify>\r\n                    <Tab eventKey=\"available\" title={<><span className=\"fw-bold\">Available Jobs</span> <Badge bg=\"success\">{pendingTasks.length}</Badge></>}>\r\n                        <div className=\"p-2\">\r\n                            {pendingTasks.length > 0 ? pendingTasks.map(task => \r\n                                <AvailableJobCard key={task._id} task={task} onApply={handleApplyForTask} />\r\n                            ) : <Alert variant=\"light\" className=\"text-center\">No jobs available right now. Check back soon!</Alert>}\r\n                        </div>\r\n                    </Tab>\r\n                    <Tab eventKey=\"my-tasks\" title={<><span className=\"fw-bold\">My Jobs</span> <Badge bg=\"primary\">{myTasks.filter(t => t.status !== 'completed').length}</Badge></>}>\r\n                        <div className=\"p-2\">\r\n                           {myTasks.length > 0 ? <p>{myTasks.length} tasks assigned to you.</p> : <Alert variant=\"light\" className=\"text-center\">You have no active or completed jobs.</Alert>}\r\n                        </div>\r\n                    </Tab>\r\n                    <Tab eventKey=\"payments\" title={<><span className=\"fw-bold\">Payment History</span></>}>\r\n                         <div className=\"p-2\">\r\n                            <Table striped bordered hover responsive>\r\n                                <thead>\r\n                                    <tr><th>Date</th><th>Task Description</th><th>Payout</th></tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {paymentHistory.length > 0 ? paymentHistory.map(p => (\r\n                                        <tr key={p._id}>\r\n                                            <td>{new Date(p.createdAt).toLocaleDateString()}</td>\r\n                                            <td>{p.description}</td>\r\n                                            <td>${p.finalPrice || p.estimatedPrice}</td>\r\n                                        </tr>\r\n                                    )) : <tr><td colSpan=\"3\" className=\"text-center\">No payment history.</td></tr>}\r\n                                </tbody>\r\n                            </Table>\r\n                         </div>\r\n                    </Tab>\r\n                </Tabs>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErranderDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}